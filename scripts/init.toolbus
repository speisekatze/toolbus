import uuid
import platform
import requests
import psutil
import subprocess

def stage_ip(data):
    print(data)
    profile_name = data['options']['netctl_profile']
    filename = '/etc/netctl/' + profile_name
    f = open(filename, 'w')
    f.write(data['payload'])
    f.close()
    subprocess.run(['netctl', 'switch-to', profile_name])

def stage_default(data):
    print(data)

stages = {
    'ip': {'f': stage_ip}
}

def get_f(stage):
    if stage not in stages:
        return stage_default
    return stages[stage]['f']

def get(url):
    r = requests.get(url)
    data = {}
    if r.status_code == 200:
        data = r.json()
    return data

mac = '%012x' % uuid.getnode()
hostname = platform.node()
addrs = psutil.net_if_addrs()
ifname = ''
for i in addrs:
    for x in addrs[i]:
        if int(x[0]) == 17 and x[1].replace(':', '') == mac:
            ifname = i            


url = f'%%proto%%://%%host%%:%%port%%/%%stage%%?mac={mac}&host={hostname}'
data = get(url)


if 'url' in data:
    new_url = data['url'].format(mac=mac, hostname=hostname, ifname=ifname)
    print(new_url)
    data = get(new_url)
    whatever = get_f(data['stage'])(data)
    

